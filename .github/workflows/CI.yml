name: CI
on:
  pull_request:
  push:
    branches:
      - main
env:
  RUST_BACKTRACE: 1

jobs:
  style:
    name: Check Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: cargo fmt --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test:
    name: Test
    needs: [style]
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings
    strategy:
      matrix:
        rust:
          - nightly
          - beta
          - stable
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: llvm-tools-preview

      - name: Install libssl-dev
        run: sudo apt-get update && sudo apt-get install libssl-dev

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Build
        uses: actions-rs/cargo@v1
        if: matrix.rust == 'nightly' || matrix.rust == 'beta'
        with:
          command: build
          args: --features=ntex-net/tokio

      - name: Run lib tests and doc tests
        uses: actions-rs/cargo@v1
        if: matrix.rust == 'nightly' || matrix.rust == 'beta'
        with:
          command: test
          args: --features=ntex-net/tokio

      - name: Generate code coverage
        run: cargo llvm-cov --no-report --features=ntex-net/tokio
        if: matrix.rust == 'stable'

      #- name: Run integration tests
      #  uses: actions-rs/cargo@v1
      #  with:
      #    command: test
      #    args: -p h2-tests

      - name: Run h2spec
        run: ./tests/h2spec.sh
        if: matrix.rust == 'stable'

      # - name: Check minimal versions
      #   run: cargo clean; cargo update -Zminimal-versions; cargo check
      #   if: matrix.rust == 'nightly'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.rust == 'stable'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true

  msrv:
    name: Check MSRV (${{ matrix.rust }})
    needs: [style]
    strategy:
      matrix:
        rust:
          - 1.75 # never go past ntex's msrv

        os:
          - ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --features=ntex-net/tokio
